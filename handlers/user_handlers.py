from aiogram import Router, F, Bot
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, File
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup, default_state
import logging
import asyncio
import os
from config_data.config import Config, load_config
from aiogram.types.input_file import FSInputFile

router = Router()
# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é config
config: Config = load_config()
user_dict = dict()


class Form(StatesGroup):
    description = State()
    file = State()
    video2 = State()
    paper2 = State()
    video3 = State()
    paper3 = State()
    finish = State()


@router.message(CommandStart())
async def process_start_command(message: Message) -> None:
    logging.info(f'process_start_command: {message.chat.id}')
    await message.answer(text="""üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!
–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –∏/–∏–ª–∏ —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–æ—Ç–∞ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∏–∂–µ.
‚ùóÔ∏è –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —á–∞—Ç-–±–æ—Ç –≤–∞–º –Ω—É–∂–µ–Ω —Å—Ä–æ—á–Ω–æ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –ª–∏—á–Ω–æ @AntonPon0marev —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–æ–≤.
""")
    await asyncio.sleep(10)
    button_1 = InlineKeyboardButton(text='–í–ö',
                                    callback_data='vk_data')
    button_2 = InlineKeyboardButton(text='–¢–µ–ª–µ–≥—Ä–∞–º',
                                    callback_data='tg_data')
    button_3 = InlineKeyboardButton(text='Whatsapp',
                                    callback_data='wp_data')
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[button_1, button_2, button_3]],
    )
    await message.answer(text="üéØ –†–∞–∑—Ä–∞–±–æ—Ç–∫—É –±–æ—Ç –Ω–∞ –∫–∞–∫–æ–π –ø–ª–æ—â–∞–¥–∫–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è?",
                         reply_markup=keyboard)


@router.callback_query(F.data.endswith('_data'))
async def process_description(callback: CallbackQuery, state: FSMContext) -> None:
    logging.info(f'process_description: {callback.message.chat.id}')
    await state.update_data(social=callback.data.split('_')[0])
    # users_dict[callback.message.chat.id]['social'] = F.data.split('_')[0]
    await callback.message.answer(text="""–î–ª—è –∑–∞–∫–∞–∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ:
–¶–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –≤ –Ω—ë–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å.
""")
    await state.set_state(Form.description)


@router.message(StateFilter(Form.description))
async def process_file(message: Message, state: FSMContext) -> None:
    logging.info(f'process_file: {message.chat.id}')
    await state.update_data(description=message.text)
    # users_dict[message.chat.id]['description'] = message.text
    await message.answer(text="""–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¢–ó (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ, —Å—Ö–µ–º–∞)?
–ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–∞–π–ª.
""")
    await state.set_state(Form.file)


# @router.message(F.photo)
# async def advanced_handler(message: Message, bot: Bot):
#     if message.content_type == 'photo':
#         photo = message.photo[-1]  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
#         file_id = photo.file_id
#         file = await bot.get_file(file_id)
#         file_path = file.file_path
#         save_path = os.path.join('data', f'{message.chat.id}-{file_id}.jpg')
#         await bot.download_file(file_path, save_path)


@router.message((F.document | F.photo | F.text), StateFilter(Form.file))
async def process_material(message: Message, state: FSMContext, bot: Bot) -> None:
    logging.info(f'process_material: {message.chat.id}')
    if message.content_type == 'photo':
        photo = message.photo[-1]  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
        file_id = photo.file_id
        await state.update_data(photo_id=file_id)
        file = await bot.get_file(file_id)
        file_path = file.file_path
        save_path = os.path.join('data', f'{message.chat.id}-{file_id}.jpeg')
        await bot.download_file(file_path, save_path)
    elif message.content_type == 'text':
        await state.update_data(text_tz=message.text)
    else:
        doc = message.document
        file_name = doc.file_name
        file_ext = os.path.splitext(file_name)[1]
        file_path = os.path.join('data/', f"{message.chat.id}-{file_name}")
        await state.update_data(path_document=file_path)
        await bot.download(doc.file_id, file_path)

    button_1 = InlineKeyboardButton(text='–í—Å–µ –≥–æ—Ç–æ–≤–æ!',
                                    callback_data='all_done')
    button_2 = InlineKeyboardButton(text='–ß–∞—Å—Ç–∏—á–Ω–æ',
                                    callback_data='part_done')
    button_3 = InlineKeyboardButton(text='–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
                                    callback_data='None_done')
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[button_1, button_2, button_3]],
    )
    await message.answer(text="""–£ –≤–∞—Å —É–∂–µ –≥–æ—Ç–æ–≤—ã –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –±–æ—Ç–∞? –ò–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞/–¥–∏–∑–∞–π–Ω–µ—Ä–∞ –∏ –ø—Ä.?
""",
                         reply_markup=keyboard)


@router.callback_query(F.data.endswith('_done'))
async def process_finish(callback: CallbackQuery, state: FSMContext, bot: Bot) -> None:
    logging.info(f'process_finish: {callback.message.chat.id}')
    await state.update_data(material=callback.data.split('_')[0])
    user_dict[callback.message.chat.id] = await state.get_data()
    print(user_dict)
    # await callback.message.answer(text=f'–î–ª—è –∫–∞–∫–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –Ω—É–∂–µ–Ω –±–æ—Ç: {user_dict[callback.message.chat.id]["social"]}\n'
    #                                    f'–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["description"]}\n'
    #                                    f'–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["material"]}')
    if 'photo_id' in user_dict[callback.message.chat.id]:
        await bot.send_photo(chat_id=config.tg_bot.admin_ids,
                             photo=user_dict[callback.message.chat.id]["photo_id"],
                             caption=f'–î–ª—è –∫–∞–∫–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –Ω—É–∂–µ–Ω –±–æ—Ç: {user_dict[callback.message.chat.id]["social"]}\n'
                                     f'–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["description"]}\n'
                                     f'–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["material"]}')
    elif 'text_tz' in user_dict[callback.message.chat.id]:
        await bot.send_message(chat_id=config.tg_bot.admin_ids,
                               text=f'–î–ª—è –∫–∞–∫–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –Ω—É–∂–µ–Ω –±–æ—Ç: {user_dict[callback.message.chat.id]["social"]}\n'
                                    f'–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["description"]}\n'
                                    f'–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: {user_dict[callback.message.chat.id]["text_tz"]}\n'
                                    f'–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["material"]}')
    else:
        await bot.send_message(chat_id=config.tg_bot.admin_ids,
                               text=f'–î–ª—è –∫–∞–∫–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –Ω—É–∂–µ–Ω –±–æ—Ç: {user_dict[callback.message.chat.id]["social"]}\n'
                                    f'–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["description"]}\n'
                                    f'–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –±–æ—Ç–∞: {user_dict[callback.message.chat.id]["material"]}')
        document = FSInputFile(f'{user_dict[callback.message.chat.id]["path_document"]}')
        await bot.send_document(chat_id=config.tg_bot.admin_ids,
                                document=document)
    await callback.message.answer(text="""üßëüèº‚Äçüíª–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ—Ç–≤–µ—Ç—ã.  –°–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
–ê –ø–æ–∫–∞ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª: <a href='https://t.me/GigabytesChatbots'>@GigabytesChatbots</a>
–†–∞–±–æ—Ç—ã, —Ü–µ–Ω—ã, —Ä–∞–∑–±–æ—Ä—ã –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é –≤ –¢–ì.""")

